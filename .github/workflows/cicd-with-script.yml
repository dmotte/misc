---
name: cicd-with-script

on:
  workflow_call:
    inputs:
      run-prettier: { type: boolean, required: false, default: true }
      run-shellcheck: { type: boolean, required: false, default: true }
      run-trivy: { type: boolean, required: false, default: true }
      runs-on: { type: string, required: false, default: ubuntu-latest }
      fetch-depth: { type: number, required: false, default: 1 }
      script: { type: string, required: false, default: "" }
    secrets:
      secret01: { required: false }
      secret02: { required: false }
      secret03: { required: false }
      secret04: { required: false }
      secret05: { required: false }

# Note: the "if: inputs.run-*" conditions are defined on the steps instead of
# the jobs to let the "specific" job run even if some of the others are skipped

jobs:
  prettier:
    runs-on: ubuntu-latest
    steps:
      - if: inputs.run-prettier
        uses: actions/checkout@v4
      - if: inputs.run-prettier
        uses: dmotte/misc/actions/run-cicd-script@main
        with:
          script: bash "$(realpath "$GITHUB_ACTION_PATH/../../scripts/cicd/generic-prettier.sh")"

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - if: inputs.run-shellcheck
        uses: actions/checkout@v4
      - if: inputs.run-shellcheck
        uses: dmotte/misc/actions/run-cicd-script@main
        with:
          script: bash "$(realpath "$GITHUB_ACTION_PATH/../../scripts/cicd/generic-shellcheck.sh")"

  trivy:
    runs-on: ubuntu-latest
    steps:
      - if: inputs.run-trivy
        uses: actions/checkout@v4
      - if: inputs.run-trivy
        uses: dmotte/misc/actions/run-cicd-script@main
        with:
          script: bash "$(realpath "$GITHUB_ACTION_PATH/../../scripts/cicd/generic-trivy.sh")"

  specific:
    runs-on: ${{ inputs.runs-on }}
    if: inputs.script != ''
    needs: [prettier, shellcheck, trivy]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ inputs.fetch-depth }}
      - uses: dmotte/misc/actions/run-cicd-script@main
        with:
          script: ${{ inputs.script }}
          secret01: ${{ secrets.secret01 }}
          secret02: ${{ secrets.secret02 }}
          secret03: ${{ secrets.secret03 }}
          secret04: ${{ secrets.secret04 }}
          secret05: ${{ secrets.secret05 }}
